# load library
library(tidyverse) # for data manipulation and visualization
?diamond
?diamond
?diamonds
View(diamonds)
# load library
library(tidyverse) # data manipulation and visualization
?diamonds
View(diamonds)
colSums(is.na(diamonds))
ideal_diamonds <- diamonds %>%
filter(cut == "Ideal")
str(diamonds)
View(ideal_diamonds)
exp_diamonds <- diamonds %>%
filter(price >= 10000)
View(exp_diamonds)
exp_ideal <- diamonds %>%
filter(cut == "Ideal",
price >= 10000)
View(exp_ideal)
View(ideal_diamonds)
# 4. subset by column with select
mini_diamonds <- diamonds %>%
select(cut, color, price)
View(mini_diamonds)
mini_diamonds <- diamonds %>%
select(1:5)
View(mini_diamonds)
mini_diamonds <- diamonds %>%
select(starts_with("c"))
View(mini_diamonds)
mini_diamonds <- diamonds %>%
select(contains("c"))
View(mini_diamonds)
# 3. subset by row with filter
?filter
# 4. subset by column with select
?select
mini_diamonds <- diamonds %>%
select(cut,
everything())
View(mini_diamonds)
mini_diamonds <- diamonds %>%
select(-price)
View(mini_diamonds)
# 5. reorder rows with arrange()
?arrange
diam_arr <- diamonds %>%
arrange(color)
View(diam_arr)
diam_arr <- diamonds %>%
arrange(depth)
View(diam_arr)
diam_arr <- diamonds %>%
arrange(desc(depth))
View(diam_arr)
diam_arr <- diamonds %>%
arrange(color, carat)
View(diam_arr)
glimpse(diamonds)
# 6. add or modify columns with mutate()
?mutate
upd_diamonds <- diamonds %>%
mutate(g_mass = .20 * carat)
View(upd_diamonds)
# add multiple columns
upd_diamonds <- diamonds %>%
mutate(g_mass = .20 * carat,
price_per_carat = price / carat)
View(upd_diamonds)
upd_diamonds <- diamonds %>%
mutate(g_mass = .20 * carat,
price_per_carat = price / carat,
exp_bool = price >= 5000)
View(upd_diamonds)
View(diamonds)
# 7. grouped summaries with group_by() and summarize() --------------------
diamonds %>%
group_by(cut) %>%
summarise(mean(price))
# 7. grouped summaries with group_by() and summarise() --------------------
diamonds %>%
group_by(cut) %>%
summarise(avg_price = mean(price))
diamonds %>%
group_by(cut) %>%
summarise(avg_price = mean(price),
sd_price = sd(price)) # multiple summaries
diamonds %>%
group_by(cut,
color) %>%
summarise(avg_price = mean(price),
sd_price = sd(price)) # multiple groupings
diamonds %>%
group_by(cut) %>%
summarise(avg_price = mean(price),
sd_price = sd(price),
count = n()) # multiple summaries
diamonds %>%
group_by(cut,
color) %>%
summarise(avg_price = mean(price),
sd_price = sd(price),
count = n()) # multiple groupings
diamonds %>%
count(color,
cut) # counts only
quit()
